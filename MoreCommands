from discord.ext import commands
import requests
import discord
import asyncio


bot = commands.Bot(command_prefix='!', intents=discord.Intents.all())

target_channel_id = 1114619586449526807

@bot.command()
async def define(ctx, term):
    response = requests.get(f"https://api.urbandictionary.com/v0/define?term={term}")
    data = response.json()
    if len(data['list']) > 0:
        definition = data['list'][0]['definition']
        example = data['list'][0]['example']
        await ctx.send(f"**{term}:**\n\nDefinition: {definition}\n\nExample: {example}")
    else:
        await ctx.send("No definition found.")

@bot.command()
async def remindme(ctx, duration, *, reminder):
    time_units = {
        "s": 1,
        "m": 60,
        "h": 3600,
        "d": 86400
    }

    duration_value = int(duration[:-1])
    duration_unit = duration[-1]

    if duration_unit not in time_units:
        await ctx.send("Invalid duration unit. Use s, m, h, or d.")
        return

    total_seconds = duration_value * time_units[duration_unit]
    await ctx.send(f"Reminder set for {duration}.")

    await asyncio.sleep(total_seconds)
    await ctx.send(f"Reminder: {reminder} ({duration} ago)")

@bot.command()
async def insult(ctx, user: discord.Member):
    response = requests.get("https://evilinsult.com/generate_insult.php?lang=en&type=json")
    data = response.json()
    insult = data["insult"]
    await ctx.send(f"{user.mention}, {insult}")

bot.run("MTA3ODA2MTE1OTUzOTgwMjIwMw.G-3Nu2.5oBAJmNJACm_GoaMgnyskLmBmLmomqD_ZOp3uk")
